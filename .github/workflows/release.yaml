name: peaq charmev release
on:
  # Enable manual run
  workflow_dispatch:
  # Refs/tags push events to matching v*, i.e. v1.0, v20.15.10
  push:
    branches:
      - 'dev'
      - 'main'
concurrency:
  group: release
jobs:
  generate-changelog:
    name: Generate changelog
    runs-on: ubuntu-latest
    outputs:
      next-version: ${{ steps.bump_version.outputs.next-version }}
      prerelease: ${{ steps.set_outputs.outputs.prerelease }}
      release-type: ${{ steps.set_outputs.outputs.release-type }}
    steps:
      - name: print env
        run: env
      - name: Checkout charmev code
        uses: actions/checkout@v2
      - name: Get commit message
        id: set_outputs
        run: |
          comment=$(git log -1 --pretty=format:"%s" ${{ github.sha }})
          # set comming change is feature or fix
          if   [[ "$comment" == */feature/* ]] || [[ "$comment" == */feat/* ]] || [[ "$comment" == */dev ]]; then
            echo ::set-output name=version-fragment::feature
          elif [[ "$comment" == */bug/* ]] || [[ "$comment" == */fix/* ]] || [[ "$comment" == */hotfix/* ]]; then
            echo ::set-output name=version-fragment::bug
          else 
            echo ::set-output name=version-fragment::alpha
          fi
          # set type of release, changes to dev will release as prerelease and to main as release 
          if [[ ${{ github.ref_name }} == 'dev' ]]; then
            echo ::set-output name=prerelease::true
            echo ::set-output name=release-type::prerelease
          else 
             echo ::set-output name=prerelease::false
             echo ::set-output name=release-type::stable
          fi
      - name: Get latest release 
        uses: rez0n/actions-github-release@main
        id: get_latest_release
        env:
          token: ${{ secrets.TOKEN }}
          repository: ${{ github.repository }}
          type: "nodraft"
      - name: Next release version
        id: bump_version
        uses: christian-draeger/increment-semantic-version@1.0.2
        with:
          current-version: ${{ steps.get_latest_release.outputs.release }}
          version-fragment: ${{ steps.set_outputs.outputs.version-fragment }}
      - name: Generate changelog since last published release
        uses: charmixer/auto-changelog-action@5c6320ae4dedc8743e4439a3c56294c294553fb9
        with:
          token: ${{ secrets.TOKEN }}
          future_release: ${{ steps.bump_version.outputs.next-version}}
          since_tag: ${{ steps.get_latest_release.outputs.release }}
      - name: Upload changelog
        uses: actions/upload-artifact@v2
        with:
          name: changelog
          path: CHANGELOG.md

  release:
    name: Release ${{ github.ref_name }}
    needs: generate-changelog
    runs-on: ubuntu-20.04
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Download changelog
        uses: actions/download-artifact@v2
        with:
          name: changelog
      - name: Pre release with changelog
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          tag_name: ${{ needs.generate-changelog.outputs.next-version }}
          release_name: peaq charmev ${{ needs.generate-changelog.outputs.next-version }}
          body_path: CHANGELOG.md
          draft: false
          prerelease: ${{ needs.generate-changelog.outputs.prerelease }}

  create-build:
    name: Create ${{ matrix.target }} build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        target: [Android]
        include:
          - os: ubuntu-20.04
            target: Android
            build_target: apk
            build_path: build/app/outputs/flutter-apk
            asset_extension: .apk
            asset_content_type: application/vnd.android.package-archive
          
      # Disable fail-fast as we want results from all even if one fails.
      fail-fast: false
    needs: release
    steps:
      # Set up Flutter.
      - name: Clone Flutter repository with flutter-version 2.5.3
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '2.5.3'

      - name: Install Linux dependencies
        if: matrix.target == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libx11-dev pkg-config cmake ninja-build libblkid-dev
      - name: Install Android dependencies
        if: matrix.target == 'Android'
        uses: actions/setup-java@v1
        with:
          java-version: "1.8"
      - name: Checkout charmev code
        uses: actions/checkout@v2
      - run: echo "workspcae=$GITHUB_WORKSPACE" >> $GITHUB_ENV
      - run: flutter clean
      - name: Enable desktop support
        if: matrix.target != 'Android'
        run: |
          flutter config --enable-linux-desktop
      - run: flutter doctor -v
      - run: flutter pub upgrade
      - run: flutter pub get
      # Build the application.
      - run: flutter build ${{ matrix.build_target }} --split-per-abi

      # Package the build.
      - name: Compress build for Android
        if: matrix.target == 'Android'
        run: zip -r charmev_apk.zip app-x86_64-release.apk app-arm64-v8a-release.apk app-armeabi-v7a-release.apk app.apk
        working-directory: ${{ matrix.build_path }}
      - name: Rename build for Android
        if: matrix.target == 'Android'
        run: mv charmev_apk.zip $GITHUB_WORKSPACE/charmev_apk.zip
        working-directory: ${{ matrix.build_path }}
      # Upload the build.
      - name: Add packaged build to release of ${{ github.ref_name }}
        id: upload_release_asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          upload_url: ${{ needs.draft-release.outputs.upload_url }}
          asset_path: ${{ env.workspcae }}/charmev_apk.zip
          asset_name: charmev_${{ matrix.target }}.zip
          asset_content_type: application/zip